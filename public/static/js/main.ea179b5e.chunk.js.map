{"version":3,"sources":["logo.svg","services/user_services.js","components/SimpleModal.js","components/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","host","_callee","data","regenerator_default","a","wrap","_context","prev","next","abrupt","fetch","method","body","JSON","stringify","headers","Content-Type","stop","this","rand","Math","round","random","getModalStyle","top","left","concat","transform","SimpleModal","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClose","onChangeopen","classes","react_default","createElement","hidden","Modal_default","aria-labelledby","aria-describedby","open","onClose","style","className","paper","Typography_default","variant","id","msg","RaisedButton_default","b","onClick","primary","SimpleModalWrapped","React","Component","withStyles","theme","position","width","spacing","unit","backgroundColor","palette","background","boxShadow","shadows","padding","outline","float","Form","state","firstName","firstNameError","lastName","lastNameError","phone","phoneError","email","emailError","Feedback","FeedbackError","value","handleLanguageCode","setState","handleOpen","change","e","onChange","defineProperty","target","name","handleChange","event","validate","isError","errors","length","isNaN","indexOf","trim","objectSpread","onSubmit","preventDefault","_x","_addUserPost","apply","arguments","addUserPost","firstname","lastname","rating","then","res","json","console","log","success","catch","err","_this2","noValidate","autoComplete","container","TextField_default","hintText","floatingLabelText","errorText","floatingLabelFixed","type","textField","rowsMax","multiline","rows","slider","Slider_default","min","max","step","label","components_SimpleModal","margin","display","marginLeft","marginRight","App","fields","updatedValue","MuiThemeProvider_default","AppBar_default","title","components_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ea179b5e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import fetch from 'isomorphic-fetch';\r\n\r\n// * snip *\r\n//const host ='http://localhost:3000' // on development\r\n const host=''; // on production \r\n export async function addUserPost(data) {\r\n    return fetch(host +'/feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(data),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 50 + rand();\r\n  const left = 50 + rand();\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst styles = theme => ({\r\n  paper: {\r\n    position: 'absolute',\r\n    width: theme.spacing.unit * 30,\r\n    backgroundColor: theme.palette.background.paper,\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing.unit * 4,\r\n    outline: 'none',\r\n  },\r\n\r\n  b: {\r\n    float: 'right'\r\n  }\r\n});\r\n\r\nclass SimpleModal extends React.Component {\r\n  constructor(props) {\r\nsuper(props);\r\n    \r\n\r\n  }\r\n\r\n\r\n  handleClose = () => {\r\n// Output data from the child component to the parent component  \r\n    this.props.onChangeopen();\r\n\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div hidden={true}>\r\n       \r\n        <Modal\r\n               aria-labelledby=\"simple-modal-title\"\r\n               aria-describedby=\"simple-modal-description\"\r\n               open={this.props.open}\r\n               onClose={this.handleClose}\r\n          >\r\n               <div style={getModalStyle()} className={classes.paper}>\r\n               \r\n                 <Typography variant=\"h6\" id=\"modal-title\">\r\n                   {this.props.msg}\r\n                 </Typography>\r\n                \r\n                <RaisedButton className={classes.b}onClick={this.handleClose} primary > Close</RaisedButton>\r\n                \r\n                 <SimpleModalWrapped />\r\n               </div>\r\n         </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSimpleModal.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\n// We need an intermediary variable for handling the recursive nesting.\r\nconst SimpleModalWrapped = withStyles(styles)(SimpleModal);\r\n\r\nexport default SimpleModalWrapped;\r\n","import React, { Component  } from 'react';\nimport TextField from 'material-ui/TextField';\nimport RaisedButton from 'material-ui/RaisedButton';\nimport {addUserPost} from '../services/user_services' ;\nimport Slider from '@material-ui/lab/Slider';\nimport SimpleModal from './SimpleModal';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\n// deaclare some styles\nconst styles = theme => ({\n  slider: {\n    margin: 'auto' ,\n    width: '200px',\n    padding: '22px 0px', \n} ,\ncontainer: {\n   margin: '0 auto' ,\n   display: 'table',\n\n},\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\nclass Form extends Component {\n\n  state = {\n    firstName: \"\",\n    firstNameError: \"\",\n    lastName: \"\",\n    lastNameError: \"\",\n    phone: \"\",\n    phoneError: \"\",\n    email: \"\",\n    emailError: \"\",\n    Feedback: \"\",\n    FeedbackError: \"\" ,\n    value: 5 ,\n    open: false , \n    msg: \"\"\n  };\n\n\n  handleLanguageCode = () => {\n    this.setState({open: false});\n}\n\n\n  handleClose = () => {\n    this.setState({ open: false});\n  };\n  \n\n\n// to open the modal and send the msg \n  handleOpen = (msg) => {\n    this.setState({ open: true , msg:msg});\n  };\n   \n  change = e => {\n    this.props.onChange({ [e.target.name]: e.target.value });\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n   \n  };\n\n  handleChange = (event, value) => {\n    this.setState({ value: value });\n  \n  };\n// to validate the form\n  validate = () => {\n    let isError = false;\n    const errors = {\n      firstNameError: \"\",\n      lastNameError: \"\",\n      FeedbackError: \"\",\n      emailError: \"\",\n      phoneError: \"\"\n    };\n    \n    if (this.state.phone.length <8 ) {\n      isError = true;\n      errors.phoneError = \"* Phone must be at least 8 numbers\";\n    } \n    if( isNaN(this.state.phone)) {\n      isError = true;\n      errors.phoneError = \"* Phone must be mumber \";\n    }\n    if (this.state.email.indexOf(\"@\") === -1) {\n      isError = true;\n      errors.emailError = \"* Email must contain @\";\n    }\n    if (this.state.email.indexOf(\".\") === -1) {\n      isError = true;\n      errors.emailError =  \"* Email must contain . \";\n    }\n    if (this.state.firstName.trim()=== '' ) {\n      isError = true;\n      errors.firstNameError = \"* Firstname Required\";\n    }\n \n    if (this.state.Feedback.trim()=== '' ) {\n      isError = true;\n      errors.FeedbackError = \"* Feedback Required\";\n    }\n\n    \n    if (this.state.email.trim()=== '' ) {\n      isError = true;\n      errors.emailError = \"* Email Required\";\n    }\n    if (this.state.lastName.trim()=== '' ) {\n      isError = true;\n      errors.lastNameError = \"* Lastname Required\";\n    }\n\n    this.setState({\n      ...this.state,\n      ...errors\n    });\n\n    return isError;\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    \n    const err = this.validate();\n  if (!err) {\n // body to send to the server \nconst body = {\n  firstname : this.state.firstName ,\n  lastname : this.state.lastName ,\n  email : this.state.email ,\n  Feedback : this.state.Feedback ,\n  phone : this.state.phone ,\n  rating: this.state.value\n}\n\n\n// POST to the server\n addUserPost(body).then(res => {res.json()\n       .then(data => {console.log(data) ;  // catching a promise\n        if(data.success){\n             this.handleOpen('thank you for your submission'); \n       } else {\n             this.handleOpen('Sorry your submission has not been saved');\n               }\n        } );\n  }) \n  .catch(err => {console.log(err) ;this.handleOpen('Sorry Problem in the Server');});; // catching errors\n  \n   // clear form\n   this.setState({\n    firstName: \"\",\n    firstNameError: \"\",\n    lastName: \"\",\n    lastNameError: \"\",\n    phone: \"\",\n    phoneError: \"\",\n    email: \"\",\n    emailError: \"\",\n    Feedback: \"\",\n    FeedbackError: \"\" ,\n    open: false \n  });\n  this.props.onChange({\n    firstName: \"\",\n    lastName: \"\",\n    phone: \"\",\n    email: \"\",\n    Feedback: \"\",\n    open : false\n  });\n     }\n    \n  \n    \n    \n      \n  };\n\n\n  \n  \n\n\n  render() {\n\n    const { classes } = this.props;\n\n   return (\n    <div>\n      \n      <form theme=\"true\" noValidate autoComplete=\"off\">\n\n           <div className={classes.container}>\n            <TextField\n              name=\"firstName\"\n              hintText=\"First name\"\n              floatingLabelText=\"First name\"\n              value={this.state.firstName}\n              onChange={e => this.change(e)}\n              errorText={this.state.firstNameError}\n              floatingLabelFixed\n      \n            />\n            <TextField\n             name=\"lastName\"\n             hintText=\"Last Name\"\n             floatingLabelText=\"Last Name\"\n             value={this.state.lastName}\n             onChange={e => this.change(e)}\n             errorText={this.state.lastNameError}\n             floatingLabelFixed\n           />\n           </div>\n           <div className={classes.container}>\n             <TextField\n              name=\"phone\"\n               hintText=\"phone\"\n               floatingLabelText=\"phone\"\n               value={this.state.phone}\n               onChange={e => this.change(e)}\n               errorText={this.state.phoneError}\n               floatingLabelFixed\n             />\n              <TextField\n               name=\"email\"\n               hintText=\"Email\"\n               floatingLabelText=\"Email\"\n               value={this.state.email}\n               onChange={e => this.change(e)}\n               errorText={this.state.emailError}\n               floatingLabelFixed\n              type=\"email\"\n              />\n        </div>\n           <TextField   className={classes.textField}\n                 name=\"Feedback\"\n                 hintText=\"Feedback\"\n                 floatingLabelText=\"Feedback\"\n                 rowsMax={8}\n                 value={this.state.Feedback}\n                 onChange={e => this.change(e)}\n                 errorText={this.state.FeedbackError}\n                 floatingLabelFixed\n                 multiline=\"true\"\n                 rows={3}\n            />\n\n         \n             <br />\n         <div className={classes.slider}>\n           <p>Raiting</p>\n            <Slider  \n         \n            value={this.state.value}\n            min={0}\n            max={5}\n            step={1}\n            onChange={this.handleChange}\n             />\n         \n        \n           </div>\n           <br/>\n          <RaisedButton label=\"Submit\" onClick={e => this.onSubmit(e)} primary />\n      </form>\n      \n           <SimpleModal   open={this.state.open} msg={this.state.msg}  onChangeopen={this.handleLanguageCode}></SimpleModal>\n    </div>\n      \n      );\n  }\n}\nForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\nexport default withStyles(styles)(Form);\n\n\n\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport AppBar from 'material-ui/AppBar';\nimport Form from './components/Form';\n\nclass App extends Component {\n  state = {\n    fields: {}\n  };\n\n  onChange = updatedValue => {\n    this.setState({\n      fields: {\n        ...this.state.fields,\n        ...updatedValue\n      }\n    });\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider>\n        \n       \n        <div className=\"App\">\n        <AppBar title=\"Contact Form\" />\n        <Form onChange={fields => this.onChange(fields)} />\n          \n      \n        </div>\n        </MuiThemeProvider>\n    \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}